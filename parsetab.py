
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEleft+-left*/leftDOTADDDOTSUBleftDOTMULDOTDIVrightUMINUSleft'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE ID IF INTNUM LE MULASSIGN NEQ ONES PRINT RETURN STR SUBASSIGN WHILE ZEROSprogram : stmts_optstmts_opt : stmts\n                 | stmts : stmts stmt\n             | stmtstmt : ';'stmt : '{' stmts '}'id : ID\n          | ID listlvalue : idstmt : lvalue '=' expr ';'\n            | lvalue ADDASSIGN expr ';'\n            | lvalue SUBASSIGN expr ';'\n            | lvalue MULASSIGN expr ';'\n            | lvalue DIVASSIGN expr ';'expr : expr '+' expr\n            | expr '-' expr\n            | expr '*' expr\n            | expr '/' expr\n            | expr DOTADD expr\n            | expr DOTSUB expr\n            | expr DOTMUL expr\n            | expr DOTDIV exprexpr : FLOATNUM\n            | INTNUMexpr : idexpr : STRexpr : '(' expr ')'expr : '-' expr %prec UMINUSexpr : expr '\\''cond : expr '<' expr\n            | expr '>' expr\n            | expr LE expr\n            | expr GE expr\n            | expr EQ expr\n            | expr NEQ exprexpr : '[' lists ']'lists : list\n             | lists ',' listlist : '[' seq ']'seq : expr\n           | seq ',' exprfun : ZEROS \n           | EYE\n           | ONESexpr : fun '(' expr ')'stmt : WHILE '(' cond ')' stmtstmt : FOR id '=' expr ':' expr stmtstmt : IF '(' cond ')' stmt %prec IFX\n            | IF '(' cond ')' stmt ELSE stmtstmt : BREAK ';'\n            | CONTINUE ';'\n            | RETURN expr ';'stmt : PRINT seq ';'"
    
_lr_action_items = {'$end':([0,1,2,3,4,5,17,27,28,45,55,70,73,74,75,76,77,101,109,114,115,],[-3,0,-1,-2,-5,-6,-4,-51,-52,-7,-53,-54,-11,-12,-13,-14,-15,-47,-49,-48,-50,]),';':([0,3,4,5,6,12,13,16,17,18,27,28,29,31,32,33,34,41,42,43,45,46,47,48,49,50,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,99,100,101,109,111,112,113,114,115,],[5,5,-5,-6,5,27,28,-8,-4,5,-51,-52,55,-24,-25,-26,-27,70,-41,-9,-7,73,74,75,76,77,-53,-30,-29,-54,-11,-12,-13,-14,-15,5,5,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-42,-40,-47,-49,-46,5,5,-48,-50,]),'{':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[6,6,-5,-6,6,-8,-4,6,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,6,6,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,6,6,-48,-50,]),'WHILE':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[8,8,-5,-6,8,-8,-4,8,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,8,8,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,8,8,-48,-50,]),'FOR':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[9,9,-5,-6,9,-8,-4,9,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,9,9,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,9,9,-48,-50,]),'IF':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[11,11,-5,-6,11,-8,-4,11,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,11,11,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,11,11,-48,-50,]),'BREAK':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[12,12,-5,-6,12,-8,-4,12,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,12,12,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,12,12,-48,-50,]),'CONTINUE':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[13,13,-5,-6,13,-8,-4,13,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,13,13,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,13,13,-48,-50,]),'RETURN':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[14,14,-5,-6,14,-8,-4,14,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,14,14,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,14,14,-48,-50,]),'PRINT':([0,3,4,5,6,16,17,18,27,28,31,32,33,34,43,45,55,64,65,70,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,96,100,101,109,111,112,113,114,115,],[15,15,-5,-6,15,-8,-4,15,-51,-52,-24,-25,-26,-27,-9,-7,-53,-30,-29,-54,-11,-12,-13,-14,-15,15,15,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,-49,-46,15,15,-48,-50,]),'ID':([0,3,4,5,6,9,14,15,16,17,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,43,44,45,53,55,56,57,58,59,60,61,62,63,64,65,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,100,101,108,109,111,112,113,114,115,],[16,16,-5,-6,16,16,16,16,-8,-4,16,16,16,16,16,16,16,16,-51,-52,16,-24,-25,-26,-27,16,-9,16,-7,16,-53,16,16,16,16,16,16,16,16,-30,-29,16,-54,16,-11,-12,-13,-14,-15,16,16,16,16,16,16,16,16,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-47,16,-49,-46,16,16,-48,-50,]),'}':([4,5,17,18,27,28,45,55,70,73,74,75,76,77,101,109,114,115,],[-5,-6,-4,45,-51,-52,-7,-53,-54,-11,-12,-13,-14,-15,-47,-49,-48,-50,]),'ELSE':([5,27,28,45,55,70,73,74,75,76,77,101,109,114,115,],[-6,-51,-52,-7,-53,-54,-11,-12,-13,-14,-15,-47,113,-48,-50,]),'=':([7,10,16,25,43,100,],[19,-10,-8,53,-9,-40,]),'ADDASSIGN':([7,10,16,43,100,],[20,-10,-8,-9,-40,]),'SUBASSIGN':([7,10,16,43,100,],[21,-10,-8,-9,-40,]),'MULASSIGN':([7,10,16,43,100,],[22,-10,-8,-9,-40,]),'DIVASSIGN':([7,10,16,43,100,],[23,-10,-8,-9,-40,]),'(':([8,11,14,15,19,20,21,22,23,24,26,30,35,37,38,39,40,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[24,26,35,35,35,35,35,35,35,35,35,35,35,69,-43,-44,-45,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FLOATNUM':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INTNUM':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'STR':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'-':([14,15,16,19,20,21,22,23,24,26,29,30,31,32,33,34,35,42,43,44,46,47,48,49,50,52,53,56,57,58,59,60,61,62,63,64,65,66,69,71,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,111,112,],[30,30,-8,30,30,30,30,30,30,30,57,30,-24,-25,-26,-27,30,57,-9,30,57,57,57,57,57,57,30,30,30,30,30,30,30,30,30,-30,-29,57,30,30,30,30,30,30,30,30,57,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,57,57,-40,57,57,57,57,57,57,30,-46,57,]),'[':([14,15,16,19,20,21,22,23,24,26,30,35,36,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,97,108,],[36,36,44,36,36,36,36,36,36,36,36,36,44,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,44,36,]),'ZEROS':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'EYE':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ONES':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'+':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,56,-24,-25,-26,-27,56,-9,56,56,56,56,56,56,-30,-29,56,56,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,56,56,-40,56,56,56,56,56,56,-46,56,]),'*':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,58,-24,-25,-26,-27,58,-9,58,58,58,58,58,58,-30,-29,58,58,58,58,-18,-19,-20,-21,-22,-23,-28,-37,58,58,-40,58,58,58,58,58,58,-46,58,]),'/':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,59,-24,-25,-26,-27,59,-9,59,59,59,59,59,59,-30,-29,59,59,59,59,-18,-19,-20,-21,-22,-23,-28,-37,59,59,-40,59,59,59,59,59,59,-46,59,]),'DOTADD':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,60,-24,-25,-26,-27,60,-9,60,60,60,60,60,60,-30,-29,60,60,60,60,60,60,-20,-21,-22,-23,-28,-37,60,60,-40,60,60,60,60,60,60,-46,60,]),'DOTSUB':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,61,-24,-25,-26,-27,61,-9,61,61,61,61,61,61,-30,-29,61,61,61,61,61,61,-20,-21,-22,-23,-28,-37,61,61,-40,61,61,61,61,61,61,-46,61,]),'DOTMUL':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,62,-24,-25,-26,-27,62,-9,62,62,62,62,62,62,-30,-29,62,62,62,62,62,62,62,62,-22,-23,-28,-37,62,62,-40,62,62,62,62,62,62,-46,62,]),'DOTDIV':([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,63,-24,-25,-26,-27,63,-9,63,63,63,63,63,63,-30,-29,63,63,63,63,63,63,63,63,-22,-23,-28,-37,63,63,-40,63,63,63,63,63,63,-46,63,]),"'":([16,29,31,32,33,34,42,43,46,47,48,49,50,52,64,65,66,85,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,111,112,],[-8,64,-24,-25,-26,-27,64,-9,64,64,64,64,64,64,-30,64,64,64,64,64,64,64,64,64,64,64,-28,-37,64,64,-40,64,64,64,64,64,64,-46,64,]),',':([16,31,32,33,34,41,42,43,64,65,67,68,72,87,88,89,90,91,92,93,94,95,96,99,100,110,111,],[-8,-24,-25,-26,-27,71,-41,-9,-30,-29,97,-38,71,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-42,-40,-39,-46,]),'<':([16,31,32,33,34,43,52,64,65,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,79,-30,-29,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),'>':([16,31,32,33,34,43,52,64,65,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,80,-30,-29,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),'LE':([16,31,32,33,34,43,52,64,65,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,81,-30,-29,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),'GE':([16,31,32,33,34,43,52,64,65,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,82,-30,-29,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),'EQ':([16,31,32,33,34,43,52,64,65,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,83,-30,-29,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),'NEQ':([16,31,32,33,34,43,52,64,65,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,84,-30,-29,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),')':([16,31,32,33,34,43,51,54,64,65,66,87,88,89,90,91,92,93,94,95,96,98,100,102,103,104,105,106,107,111,],[-8,-24,-25,-26,-27,-9,78,86,-30,-29,95,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,111,-40,-31,-32,-33,-34,-35,-36,-46,]),']':([16,31,32,33,34,42,43,64,65,67,68,72,87,88,89,90,91,92,93,94,95,96,99,100,110,111,],[-8,-24,-25,-26,-27,-41,-9,-30,-29,96,-38,100,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-42,-40,-39,-46,]),':':([16,31,32,33,34,43,64,65,85,87,88,89,90,91,92,93,94,95,96,100,111,],[-8,-24,-25,-26,-27,-9,-30,-29,108,-16,-17,-18,-19,-20,-21,-22,-23,-28,-37,-40,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmts_opt':([0,],[2,]),'stmts':([0,6,],[3,18,]),'stmt':([0,3,6,18,78,86,112,113,],[4,17,4,17,101,109,114,115,]),'lvalue':([0,3,6,18,78,86,112,113,],[7,7,7,7,7,7,7,7,]),'id':([0,3,6,9,14,15,18,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,78,79,80,81,82,83,84,86,108,112,113,],[10,10,10,25,33,33,10,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,10,33,33,33,33,33,33,10,33,10,10,]),'expr':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[29,42,46,47,48,49,50,52,52,65,66,42,85,87,88,89,90,91,92,93,94,98,99,102,103,104,105,106,107,112,]),'fun':([14,15,19,20,21,22,23,24,26,30,35,44,53,56,57,58,59,60,61,62,63,69,71,79,80,81,82,83,84,108,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'seq':([15,44,],[41,72,]),'list':([16,36,97,],[43,68,110,]),'cond':([24,26,],[51,54,]),'lists':([36,],[67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmts_opt','program',1,'p_program','Mparser.py',30),
  ('stmts_opt -> stmts','stmts_opt',1,'p_stmts_opt','Mparser.py',35),
  ('stmts_opt -> <empty>','stmts_opt',0,'p_stmts_opt','Mparser.py',36),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','Mparser.py',40),
  ('stmts -> stmt','stmts',1,'p_stmts','Mparser.py',41),
  ('stmt -> ;','stmt',1,'p_stmt_empty','Mparser.py',45),
  ('stmt -> { stmts }','stmt',3,'p_stmts_grp','Mparser.py',48),
  ('id -> ID','id',1,'p_id','Mparser.py',53),
  ('id -> ID list','id',2,'p_id','Mparser.py',54),
  ('lvalue -> id','lvalue',1,'p_lvalue','Mparser.py',59),
  ('stmt -> lvalue = expr ;','stmt',4,'p_assignment','Mparser.py',64),
  ('stmt -> lvalue ADDASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',65),
  ('stmt -> lvalue SUBASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',66),
  ('stmt -> lvalue MULASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',67),
  ('stmt -> lvalue DIVASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',68),
  ('expr -> expr + expr','expr',3,'p_expr_binop','Mparser.py',73),
  ('expr -> expr - expr','expr',3,'p_expr_binop','Mparser.py',74),
  ('expr -> expr * expr','expr',3,'p_expr_binop','Mparser.py',75),
  ('expr -> expr / expr','expr',3,'p_expr_binop','Mparser.py',76),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_binop','Mparser.py',77),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_binop','Mparser.py',78),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_binop','Mparser.py',79),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_binop','Mparser.py',80),
  ('expr -> FLOATNUM','expr',1,'p_expr_lit','Mparser.py',85),
  ('expr -> INTNUM','expr',1,'p_expr_lit','Mparser.py',86),
  ('expr -> id','expr',1,'p_expr_id','Mparser.py',91),
  ('expr -> STR','expr',1,'p_expr_str','Mparser.py',96),
  ('expr -> ( expr )','expr',3,'p_expr_grp','Mparser.py',101),
  ('expr -> - expr','expr',2,'p_uminus','Mparser.py',106),
  ("expr -> expr '",'expr',2,'p_transpose','Mparser.py',111),
  ('cond -> expr < expr','cond',3,'p_cond','Mparser.py',116),
  ('cond -> expr > expr','cond',3,'p_cond','Mparser.py',117),
  ('cond -> expr LE expr','cond',3,'p_cond','Mparser.py',118),
  ('cond -> expr GE expr','cond',3,'p_cond','Mparser.py',119),
  ('cond -> expr EQ expr','cond',3,'p_cond','Mparser.py',120),
  ('cond -> expr NEQ expr','cond',3,'p_cond','Mparser.py',121),
  ('expr -> [ lists ]','expr',3,'p_literal_matrix','Mparser.py',126),
  ('lists -> list','lists',1,'p_lists','Mparser.py',131),
  ('lists -> lists , list','lists',3,'p_lists','Mparser.py',132),
  ('list -> [ seq ]','list',3,'p_list','Mparser.py',136),
  ('seq -> expr','seq',1,'p_seq','Mparser.py',140),
  ('seq -> seq , expr','seq',3,'p_seq','Mparser.py',141),
  ('fun -> ZEROS','fun',1,'p_fun','Mparser.py',145),
  ('fun -> EYE','fun',1,'p_fun','Mparser.py',146),
  ('fun -> ONES','fun',1,'p_fun','Mparser.py',147),
  ('expr -> fun ( expr )','expr',4,'p_funcall','Mparser.py',151),
  ('stmt -> WHILE ( cond ) stmt','stmt',5,'p_while','Mparser.py',156),
  ('stmt -> FOR id = expr : expr stmt','stmt',7,'p_for','Mparser.py',161),
  ('stmt -> IF ( cond ) stmt','stmt',5,'p_if','Mparser.py',166),
  ('stmt -> IF ( cond ) stmt ELSE stmt','stmt',7,'p_if','Mparser.py',167),
  ('stmt -> BREAK ;','stmt',2,'p_control','Mparser.py',172),
  ('stmt -> CONTINUE ;','stmt',2,'p_control','Mparser.py',173),
  ('stmt -> RETURN expr ;','stmt',3,'p_control','Mparser.py',174),
  ('stmt -> PRINT seq ;','stmt',3,'p_print','Mparser.py',185),
]
