
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEleft+-left*/leftDOTADDDOTSUBleftDOTMULDOTDIVrightUMINUSADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE ID IF INTNUM LE MULASSIGN NEQ ONES PRINT RETURN STR SUBASSIGN WHILE ZEROSprogram : stmts_optstmts_opt : stmts\n                 | stmts : stmts stmt\n             | stmtstmt : ';'stmt : '{' stmts '}'stmt : ID '=' expr ';'\n            | ID ADDASSIGN expr ';'\n            | ID SUBASSIGN expr ';'\n            | ID MULASSIGN expr ';'\n            | ID DIVASSIGN expr ';'expr : expr '+' expr\n            | expr '-' expr\n            | expr '*' expr\n            | expr '/' expr\n            | expr DOTADD expr\n            | expr DOTSUB expr\n            | expr DOTMUL expr\n            | expr DOTDIV exprexpr : FLOATNUM\n            | INTNUMexpr : '(' expr ')'expr : '-' expr %prec UMINUSexpr : expr '\\''cond : expr '<' expr\n            | expr '>' expr\n            | expr LE expr\n            | expr GE expr\n            | expr EQ expr\n            | expr NEQ exprexpr : '[' lists ']'lists : list\n             | lists ',' listlist : '[' seq ']'seq : expr\n           | seq ',' exprfun : ZEROS \n           | EYE\n           | ONESexpr : fun '(' expr ')'stmt : WHILE '(' cond ')' stmtstmt : FOR ID '=' expr ':' expr stmtstmt : IF '(' cond ')' stmt %prec IFX\n            | IF '(' cond ')' stmt ELSE stmtstmt : BREAK ';'\n            | CONTINUE ';'\n            | RETURN expr ';'stmt : PRINT STR ';'stmt : ID list"
    
_lr_action_items = {'$end':([0,1,2,3,4,5,15,22,27,28,40,52,67,68,69,70,71,72,73,97,105,110,111,],[-3,0,-1,-2,-5,-6,-4,-50,-46,-47,-7,-48,-49,-8,-9,-10,-11,-12,-35,-42,-44,-43,-45,]),';':([0,3,4,5,6,11,12,15,16,22,27,28,29,31,32,39,40,41,42,43,44,45,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[5,5,-5,-6,5,27,28,-4,5,-50,-46,-47,52,-21,-22,67,-7,68,69,70,71,72,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,5,5,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,5,5,-43,-45,]),'{':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[6,6,-5,-6,6,-4,6,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,6,6,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,6,6,-43,-45,]),'ID':([0,3,4,5,6,9,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[7,7,-5,-6,7,25,-4,7,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,7,7,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,7,7,-43,-45,]),'WHILE':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[8,8,-5,-6,8,-4,8,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,8,8,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,8,8,-43,-45,]),'FOR':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[9,9,-5,-6,9,-4,9,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,9,9,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,9,9,-43,-45,]),'IF':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[10,10,-5,-6,10,-4,10,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,10,10,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,10,10,-43,-45,]),'BREAK':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[11,11,-5,-6,11,-4,11,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,11,11,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,11,11,-43,-45,]),'CONTINUE':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[12,12,-5,-6,12,-4,12,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,12,12,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,12,12,-43,-45,]),'RETURN':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[13,13,-5,-6,13,-4,13,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,13,13,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,13,13,-43,-45,]),'PRINT':([0,3,4,5,6,15,16,22,27,28,31,32,40,52,61,62,67,68,69,70,71,72,73,75,83,84,85,86,87,88,89,90,91,92,93,97,105,107,108,109,110,111,],[14,14,-5,-6,14,-4,14,-50,-46,-47,-21,-22,-7,-48,-25,-24,-49,-8,-9,-10,-11,-12,-35,14,14,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-42,-44,-41,14,14,-43,-45,]),'}':([4,5,15,16,22,27,28,40,52,67,68,69,70,71,72,73,97,105,110,111,],[-5,-6,-4,40,-50,-46,-47,-7,-48,-49,-8,-9,-10,-11,-12,-35,-42,-44,-43,-45,]),'ELSE':([5,22,27,28,40,52,67,68,69,70,71,72,73,97,105,110,111,],[-6,-50,-46,-47,-7,-48,-49,-8,-9,-10,-11,-12,-35,-42,109,-43,-45,]),'=':([7,25,],[17,50,]),'ADDASSIGN':([7,],[18,]),'SUBASSIGN':([7,],[19,]),'MULASSIGN':([7,],[20,]),'DIVASSIGN':([7,],[21,]),'[':([7,13,17,18,19,20,21,23,24,26,30,33,34,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,94,104,],[23,34,34,34,34,34,34,34,34,34,34,34,23,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,23,34,]),'(':([8,10,13,17,18,19,20,21,23,24,26,30,33,35,36,37,38,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[24,26,33,33,33,33,33,33,33,33,33,33,33,66,-38,-39,-40,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FLOATNUM':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INTNUM':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'-':([13,17,18,19,20,21,23,24,26,29,30,31,32,33,41,42,43,44,45,47,49,50,53,54,55,56,57,58,59,60,61,62,63,66,74,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,107,108,],[30,30,30,30,30,30,30,30,30,54,30,-21,-22,30,54,54,54,54,54,54,54,30,30,30,30,30,30,30,30,30,-25,-24,54,30,30,30,30,30,30,30,30,54,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,54,54,54,54,54,54,54,54,30,-41,54,]),'ZEROS':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EYE':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ONES':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'STR':([14,],[39,]),'+':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[53,-21,-22,53,53,53,53,53,53,53,-25,-24,53,53,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,53,53,53,53,53,53,53,53,-41,53,]),'*':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[55,-21,-22,55,55,55,55,55,55,55,-25,-24,55,55,55,55,-15,-16,-17,-18,-19,-20,-23,-32,55,55,55,55,55,55,55,55,-41,55,]),'/':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[56,-21,-22,56,56,56,56,56,56,56,-25,-24,56,56,56,56,-15,-16,-17,-18,-19,-20,-23,-32,56,56,56,56,56,56,56,56,-41,56,]),'DOTADD':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[57,-21,-22,57,57,57,57,57,57,57,-25,-24,57,57,57,57,57,57,-17,-18,-19,-20,-23,-32,57,57,57,57,57,57,57,57,-41,57,]),'DOTSUB':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[58,-21,-22,58,58,58,58,58,58,58,-25,-24,58,58,58,58,58,58,-17,-18,-19,-20,-23,-32,58,58,58,58,58,58,58,58,-41,58,]),'DOTMUL':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[59,-21,-22,59,59,59,59,59,59,59,-25,-24,59,59,59,59,59,59,59,59,-19,-20,-23,-32,59,59,59,59,59,59,59,59,-41,59,]),'DOTDIV':([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[60,-21,-22,60,60,60,60,60,60,60,-25,-24,60,60,60,60,60,60,60,60,-19,-20,-23,-32,60,60,60,60,60,60,60,60,-41,60,]),"'":([29,31,32,41,42,43,44,45,47,49,61,62,63,82,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,107,108,],[61,-21,-22,61,61,61,61,61,61,61,-25,-24,61,61,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,61,61,61,61,61,61,61,61,-41,61,]),']':([31,32,46,47,61,62,64,65,73,84,85,86,87,88,89,90,91,92,93,96,106,107,],[-21,-22,73,-36,-25,-24,93,-33,-35,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-37,-34,-41,]),',':([31,32,46,47,61,62,64,65,73,84,85,86,87,88,89,90,91,92,93,96,106,107,],[-21,-22,74,-36,-25,-24,94,-33,-35,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-37,-34,-41,]),'<':([31,32,49,61,62,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,76,-25,-24,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),'>':([31,32,49,61,62,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,77,-25,-24,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),'LE':([31,32,49,61,62,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,78,-25,-24,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),'GE':([31,32,49,61,62,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,79,-25,-24,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),'EQ':([31,32,49,61,62,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,80,-25,-24,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),'NEQ':([31,32,49,61,62,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,81,-25,-24,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),')':([31,32,48,51,61,62,63,84,85,86,87,88,89,90,91,92,93,95,98,99,100,101,102,103,107,],[-21,-22,75,83,-25,-24,92,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,107,-26,-27,-28,-29,-30,-31,-41,]),':':([31,32,61,62,82,84,85,86,87,88,89,90,91,92,93,107,],[-21,-22,-25,-24,104,-13,-14,-15,-16,-17,-18,-19,-20,-23,-32,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmts_opt':([0,],[2,]),'stmts':([0,6,],[3,16,]),'stmt':([0,3,6,16,75,83,108,109,],[4,15,4,15,97,105,110,111,]),'list':([7,34,94,],[22,65,106,]),'expr':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[29,41,42,43,44,45,47,49,49,62,63,82,84,85,86,87,88,89,90,91,95,96,98,99,100,101,102,103,108,]),'fun':([13,17,18,19,20,21,23,24,26,30,33,50,53,54,55,56,57,58,59,60,66,74,76,77,78,79,80,81,104,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'seq':([23,],[46,]),'cond':([24,26,],[48,51,]),'lists':([34,],[64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmts_opt','program',1,'p_program','Mparser.py',30),
  ('stmts_opt -> stmts','stmts_opt',1,'p_stmts_opt','Mparser.py',33),
  ('stmts_opt -> <empty>','stmts_opt',0,'p_stmts_opt','Mparser.py',34),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','Mparser.py',37),
  ('stmts -> stmt','stmts',1,'p_stmts','Mparser.py',38),
  ('stmt -> ;','stmt',1,'p_stmt_empty','Mparser.py',41),
  ('stmt -> { stmts }','stmt',3,'p_stmts_grp','Mparser.py',44),
  ('stmt -> ID = expr ;','stmt',4,'p_assignment','Mparser.py',47),
  ('stmt -> ID ADDASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',48),
  ('stmt -> ID SUBASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',49),
  ('stmt -> ID MULASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',50),
  ('stmt -> ID DIVASSIGN expr ;','stmt',4,'p_assignment','Mparser.py',51),
  ('expr -> expr + expr','expr',3,'p_expr_binop','Mparser.py',54),
  ('expr -> expr - expr','expr',3,'p_expr_binop','Mparser.py',55),
  ('expr -> expr * expr','expr',3,'p_expr_binop','Mparser.py',56),
  ('expr -> expr / expr','expr',3,'p_expr_binop','Mparser.py',57),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_binop','Mparser.py',58),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_binop','Mparser.py',59),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_binop','Mparser.py',60),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_binop','Mparser.py',61),
  ('expr -> FLOATNUM','expr',1,'p_expr_lit','Mparser.py',64),
  ('expr -> INTNUM','expr',1,'p_expr_lit','Mparser.py',65),
  ('expr -> ( expr )','expr',3,'p_expr_grp','Mparser.py',68),
  ('expr -> - expr','expr',2,'p_uminus','Mparser.py',71),
  ("expr -> expr '",'expr',2,'p_transpose','Mparser.py',74),
  ('cond -> expr < expr','cond',3,'p_cond','Mparser.py',77),
  ('cond -> expr > expr','cond',3,'p_cond','Mparser.py',78),
  ('cond -> expr LE expr','cond',3,'p_cond','Mparser.py',79),
  ('cond -> expr GE expr','cond',3,'p_cond','Mparser.py',80),
  ('cond -> expr EQ expr','cond',3,'p_cond','Mparser.py',81),
  ('cond -> expr NEQ expr','cond',3,'p_cond','Mparser.py',82),
  ('expr -> [ lists ]','expr',3,'p_literal_matrix','Mparser.py',85),
  ('lists -> list','lists',1,'p_lists','Mparser.py',88),
  ('lists -> lists , list','lists',3,'p_lists','Mparser.py',89),
  ('list -> [ seq ]','list',3,'p_list','Mparser.py',92),
  ('seq -> expr','seq',1,'p_seq','Mparser.py',95),
  ('seq -> seq , expr','seq',3,'p_seq','Mparser.py',96),
  ('fun -> ZEROS','fun',1,'p_fun','Mparser.py',99),
  ('fun -> EYE','fun',1,'p_fun','Mparser.py',100),
  ('fun -> ONES','fun',1,'p_fun','Mparser.py',101),
  ('expr -> fun ( expr )','expr',4,'p_funcall','Mparser.py',104),
  ('stmt -> WHILE ( cond ) stmt','stmt',5,'p_while','Mparser.py',107),
  ('stmt -> FOR ID = expr : expr stmt','stmt',7,'p_for','Mparser.py',110),
  ('stmt -> IF ( cond ) stmt','stmt',5,'p_if','Mparser.py',113),
  ('stmt -> IF ( cond ) stmt ELSE stmt','stmt',7,'p_if','Mparser.py',114),
  ('stmt -> BREAK ;','stmt',2,'p_control','Mparser.py',117),
  ('stmt -> CONTINUE ;','stmt',2,'p_control','Mparser.py',118),
  ('stmt -> RETURN expr ;','stmt',3,'p_control','Mparser.py',119),
  ('stmt -> PRINT STR ;','stmt',3,'p_print','Mparser.py',122),
  ('stmt -> ID list','stmt',2,'p_access','Mparser.py',125),
]
